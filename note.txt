
****标准io**********************************



**********************************************

****文件io/系统调用io************************

r  -> O_RDONLY
r+ -> O_RDWR
w  -> O_WRONLY
w+ -> RDWR|O_TRUNC|O_CREAT


文件io操作相关函数：open(), close(), read(), write(), lseek();
open() 函数通过变参函数实现，可以传2个或是3个参数

文件io与标准io的区别
文件io的响应速度快
标准io的吞吐量大
应当多用标准io

标准io与文件io不可混用
fileno()可以实现两者之间的转换
fdopen()也可以实现相似功能


io的效率问题
习题：
	测试bufsize对于io效率的影响，注意性能最佳拐点出现时的bufsize值，以及何时会出现段错误


文件共享：多个任务共同操作一个文件或者协同完成任务
问题：写程序删除一个文件的第十行
思路
 1. 
 open r  -> fd1 --> lseek pos1 line11 
 2. 
 open r+ -> fd2 --> lseek pos2 line10
 3.
 while()
 {
	 read(fd1);
	 write(fd2);
 }
 4.此时在pos1到pos2之间还有一段文件，truncate


原子操作的作用：解决竞争和冲突
如tmpnam, tmpfile函数
在多进程或者多线程并法时其作用



程序中的重定向：dup, dup2


同步：sync, fsync, fdatasync

fcntl():文件描述符所操作都与其相关

ioctl():设备相关的操作都与其相关

/dev/fd/目录：虚目录，显示当前进程的文件描述符信息

*************************************************

****文件系统*************************************

（类ls的实现，比如myls）

一、目录与文件

1. 获取文件属性
	stat()
2. 文件访问权限
3. umask
4. 文件权限的更改/管理	chmod, fchmod
5. 粘住位
6. 文件系统：FAT/UFS文件系统
7. 硬链接，符号链接
8. utime等函数
9. 目录的创建和销毁
10. 更改当前工作路径
11. 分析目录/读取目录内容

二、系统数据文件和信息



三、进程环境




*************************************************


